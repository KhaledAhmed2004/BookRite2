openapi: 3.0.0
info:
  title: Banner Management API
  version: 1.0.0
  description: API endpoints to manage banners on the platform.
servers:
  - url: http://localhost:5000
    description: Local development server

tags:
  - name: Banners
    description: Banner related operations

paths:
  /api/v1/banners:
    get:
      tags:
        - Banners
      summary: Get all banners
      description: |
        Retrieve all banners from the database.
        Return a list of banners with _id, image_url, is_active, and timestamps.
      responses:
        "200":
          description: A list of banners.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  statusCode:
                    type: integer
                    example: 200
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Banner"
        "404":
          description: No banners found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
              example:
                success: false
                statusCode: 404
                message: "No banners found"

    post:
      tags:
        - Banners
      summary: Add a new banner with image upload
      description: |
        Adds a new banner.  
        Business Logic:
        1. Check if user is Admin.  
        2. Parse multipart/form-data for file upload.  
        3. Validate file type (.jpg, .jpeg, .png).  
        4. Save uploaded file to /uploads/image/.  
        5. Store file path as image_url in DB.  
        6. Set is_active to true if not provided.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
                  description: Banner image file (jpg, jpeg, png)
                is_active:
                  type: boolean
                  description: Whether the banner is active; defaults to true
              required:
                - image
      responses:
        "201":
          description: Banner added successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  statusCode:
                    type: integer
                    example: 201
                  message:
                    type: string
                    example: Banner added successfully
                  data:
                    $ref: "#/components/schemas/Banner"
        "400":
          description: Bad Request - invalid file type or missing file
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
              examples:
                invalidType:
                  value:
                    success: false
                    statusCode: 400
                    message: "Only .jpeg, .png, .jpg file supported"
                missingFile:
                  value:
                    success: false
                    statusCode: 400
                    message: "File is not supported"

  /api/v1/banners/{id}:
    get:
      tags:
        - Banners
      summary: Get a single banner by ID
      description: |
        Retrieve banner by _id from database.
        Return banner details or 404 if not found.
      parameters:
        - name: id
          in: path
          required: true
          description: Banner ID (ObjectId)
          schema:
            type: string
      responses:
        "200":
          description: Banner found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  statusCode:
                    type: integer
                    example: 200
                  data:
                    $ref: "#/components/schemas/Banner"
        "404":
          description: Banner not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
              example:
                success: false
                statusCode: 404
                message: Banner not found

    patch:
      tags:
        - Banners
      summary: Update a banner by ID
      description: |
        Update banner's image_url and/or is_active.
        Business Logic:
        1. Verify Admin user.
        2. Ensure banner exists.
        3. Update and return updated banner.
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Banner ID (ObjectId)
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                image_url:
                  type: string
                  description: New image URL
                is_active:
                  type: boolean
                  description: Banner active status
      responses:
        "200":
          description: Banner updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: Banner updated successfully
                  data:
                    $ref: "#/components/schemas/Banner"
        "404":
          description: Banner not found or failed to update
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
              example:
                success: false
                statusCode: 404
                message: Banner not found or failed to update

    delete:
      tags:
        - Banners
      summary: Delete a banner by ID
      description: |
        Delete banner by _id.
        Business Logic:
        1. Verify Admin user.
        2. Ensure banner exists.
        3. Delete and return success message.
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Banner ID (ObjectId)
          schema:
            type: string
      responses:
        "200":
          description: Banner deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: Banner deleted successfully
        "404":
          description: Banner not found or failed to delete
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response"
              example:
                success: false
                statusCode: 404
                message: Banner not found or failed to delete

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Banner:
      type: object
      properties:
        _id:
          type: string
          description: MongoDB ObjectId
          example: "60b8a84e38f2003a26a3e1bb"
        image_url:
          type: string
          description: URL of the banner image
          example: "https://example.com/banner1.jpg"
        is_active:
          type: boolean
          description: Banner active status
          example: true
        created_at:
          type: string
          format: date-time
          description: Creation timestamp
          example: "2025-06-18T12:00:00"
        updated_at:
          type: string
          format: date-time
          description: Last update timestamp
          example: "2025-06-18T12:30:00"

    Response:
      type: object
      properties:
        success:
          type: boolean
          example: false
        statusCode:
          type: integer
          example: 400
        message:
          type: string
          example: Error message details here
